EX1
 EX1	
 EX2
 EX3
 EX4
 EX5  
EX2
 EX1
 EX2
EX3




EX1.1


for i in range(1, 6):
    print("X " * i)  # Increasing pattern

for i in range(4, 0, -1):
    print("X " * i)  # Decreasing pattern


EX1.2


input_str = "n45as29@#8ss6"

# List to store individual digits
L = []

# Extract digits from the string
for char in input_str:
    if char.isdigit():  # Check if the character is a digit
        L.append(int(char))  # Convert and store in list

# Sum all extracted digits
S1 = sum(L)

print("Sum of digits:", S1)


EX1.3
 
def int_to_binary(n):
    if n == 0:
        return "0"
    
    binary_str = ""
    is_negative = n < 0
    n = abs(n)
    
    while n > 0:
        remainder = n % 2
        binary_str = str(remainder) + binary_str
        n //= 2
    
    return "-" + binary_str if is_negative else binary_str

# Example usage:
num = int(input("Enter an integer: "))
print("Binary representation:", int_to_binary(num))



EX1.4
def fibonacci(upper_threshold: int) -> list:
    result = []
    a, b = 0, 1
    while a < upper_threshold:
        result.append(a)
        a, b = b, a + b
    return result

print(fibonacci(10))

EX1.5 

import random

def rock_paper_scissors():
    choices = ['rock', 'paper', 'scissors']
    computer_choice = random.choice(choices)
    
    user_choice = input("Enter your choice (rock, paper, scissors): ").lower()
    while user_choice not in choices:
        print("Invalid choice. Please try again.")
        user_choice = input("Enter your choice (rock, paper, scissors): ").lower()
    
    print(f"Computer chose: {computer_choice}")
    print(f"You chose: {user_choice}")
    
    if user_choice == computer_choice:
        print("It is a tie")
    elif (user_choice == 'rock' and computer_choice == 'scissors') or \
         (user_choice == 'paper' and computer_choice == 'rock') or \
         (user_choice == 'scissors' and computer_choice == 'paper'):
        print("You win")
    else:
        print("You lose")

def rock_paper_scissors_advanced(rounds):
    user_score = 0
    computer_score = 0
    
    for round in range(1, rounds + 1):
        print(f"\nRound {round}")
        choices = ['rock', 'paper', 'scissors']
        computer_choice = random.choice(choices)
        
        user_choice = input("Enter your choice (rock, paper, scissors): ").lower()
        while user_choice not in choices:
            print("Invalid choice. Please try again.")
            user_choice = input("Enter your choice (rock, paper, scissors): ").lower()
        
        print(f"Computer chose: {computer_choice}")
        print(f"You chose: {user_choice}")
        
        if user_choice == computer_choice:
            print("It is a tie")
        elif (user_choice == 'rock' and computer_choice == 'scissors') or \
             (user_choice == 'paper' and computer_choice == 'rock') or \
             (user_choice == 'scissors' and computer_choice == 'paper'):
            print("You win this round")
            user_score += 1
        else:
            print("You lose this round")
            computer_score += 1
        
        print(f"Current Scores - You: {user_score}, Computer: {computer_score}")
    
    print("\nFinal Scores:")
    print(f"You: {user_score}, Computer: {computer_score}")
    if user_score > computer_score:
        print("You win the game!")
    elif user_score < computer_score:
        print("You lose the game.")
    else:
        print("The game is a tie.")

# Uncomment to run the basic version
# rock_paper_scissors()

# Uncomment to run the advanced version
# rock_paper_scissors_advanced(3)
